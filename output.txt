section .text
global _start
_start:
    push ebp
    sub ebp, esp
    call main
    xor ebx, ebx
    mov eax, 0x1
    int 80h
    ret


; Syscalls
sys_write:
    push ebp
    mov ebp, esp
    push eax
    push ebx
    push ecx
    push edx

    mov eax, 0x4
    mov ebx, 0x1
    mov ecx, DWORD [ebp + 8]
    mov edx, DWORD [ebp + 12]
    int 80h

    pop edx
    pop ecx
    pop ebx
    pop eax
    mov esp, ebp
    pop ebp
    ret



main:
push ebp
mov ebp, esp
mov DWORD [ebp-4], 0
jmp .L0
.L1:
push 5
push S2
call sys_write
add DWORD [ebp-4], 1
.L0:
mov eax, DWORD [ebp-4]
cmp eax, 10
jl .L1
nop
leave
ret


section .data
S2 db "Hello"
